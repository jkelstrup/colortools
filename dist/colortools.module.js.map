{"version":3,"file":"colortools.module.js","sources":["../src/calcLum.js","../src/hexToRgb.js","../src/hslToRgb.js","../src/isValidHex.js","../src/isValidHsl.js","../src/isValidRgb.js","../src/rgbToHex.js","../src/rgbToHsl.js","../src/rgbToRgb.js","../src/createColor.js","../src/hslToHsl.js","../src/adjust.js","../src/redefine.js","../src/index.js","../src/calcContrast.js","../src/darken.js","../src/invert.js","../src/lighten.js","../src/matchLum.js","../src/scale.js","../src/step.js"],"sourcesContent":["export default function calcLum({r,g,b}) {\n  r = (r/255) <= 0.03928 ? (r/255)/12.92 : Math.pow((((r/255)+0.055)/1.055),2.4);\n  g = (g/255) <= 0.03928 ? (g/255)/12.92 : Math.pow((((g/255)+0.055)/1.055),2.4);\n  b = (b/255) <= 0.03928 ? (b/255)/12.92 : Math.pow((((b/255)+0.055)/1.055),2.4);\n\n  // r = (r/255)/12.92;\n  // g = (g/255)/12.92;\n  // b = (b/255)/12.92;\n\n  // r = Math.pow((((r/255)+0.055)/1.055),2.4);\n  // g = Math.pow((((g/255)+0.055)/1.055),2.4);\n  // b = Math.pow((((b/255)+0.055)/1.055),2.4);\n\n  // r /= 255;\n  // g /= 255;\n  // b /= 255;\n  return Math.round((0.2126 * r + 0.7152 * g + 0.0722 * b) * 1000) / 1000;\n}\n","export default function hexToRgb(hex) {\n  if (hex.substring(0,1) !== \"#\") throw new Error(`Invalid input (${hex}). Input must start with \"#\".`);\n  if (hex.length !== 7) throw new Error(`Invalid input (${hex}). Input should be #000000-#FFFFFF. Also, shorthand not allowed.`);\n\n  let r = parseInt(hex.substring(1,3),16);\n  let g = parseInt(hex.substring(3,5),16);\n  let b = parseInt(hex.substring(5,7),16);\n\n  return {\n    r: r,\n    g: g,\n    b: b,\n    rgb: `rgb(${r},${g},${b})`\n  }\n}\n","export default function hslToRgb({h,s,l}) {\n  if (\n    h < 0 ||\n    h > 360 ||\n    s < 0 ||\n    s > 100 ||\n    l < 0 ||\n    l > 100\n  ) throw new Error(`Invalid input. Input should be h: 0-360, s: 0-100, l: 0-100.`);\n\n  h /= 360;\n  s /= 100;\n  l /= 100;\n  let r, g, b;\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1/6) return p + (q - p) * 6 * t;\n      if (t < 1/2) return q;\n      if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n      return p;\n    }\n\n    let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    let p = 2 * l - q;\n\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n\n  r = Math.round(r * 255);\n  g = Math.round(g * 255);\n  b = Math.round(b * 255);\n\n  return {\n    r: r,\n    g: g,\n    b: b,\n    rgb: `rgb(${r},${g},${b})`\n  };\n}\n","export default function isValidHex(hex) {\n  if (typeof hex === 'string') {\n    return (\n      hex.substring(0,1) === \"#\" &&\n      parseInt(hex.substring(1,3),16) >= 0 &&\n      parseInt(hex.substring(1,3),16) <= 255 &&\n      parseInt(hex.substring(3,5),16) >= 0 &&\n      parseInt(hex.substring(3,5),16) <= 255 &&\n      parseInt(hex.substring(5,7),16) >= 0 &&\n      parseInt(hex.substring(5,7),16) <= 255\n    )\n  }\n\n  return false;\n}\n","export default function isValidHsl(hsl) {\n  return (\n    hsl.h >= 0 &&\n    hsl.h <= 360 &&\n    hsl.s >= 0 &&\n    hsl.s <= 100 &&\n    hsl.l >= 0 &&\n    hsl.l <= 100\n  )\n}\n","export default function isValidRgb(rgb) {\n  return (\n    rgb.r >= 0 &&\n    rgb.r <= 255 &&\n    rgb.g >= 0 &&\n    rgb.g <= 255 &&\n    rgb.b >= 0 &&\n    rgb.b <= 255\n  )\n}\n","export default function rgbToHex({r,g,b}) {\n  function numToHex(num) {\n    let hex = num.toString(16);\n    if (hex.length === 1) hex = \"0\"+hex;\n    return hex.toUpperCase();\n  }\n\n  return \"#\" + numToHex(r) + numToHex(g) + numToHex(b);\n}\n","export default function rgbToHsl({r,g,b}) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b)\n  let min = Math.min(r, g, b);\n  let d = max-min;\n\n  let h, s, l = (max + min) / 2;\n\n  if (d === 0) {\n    h = s = 0; // achromatic\n  } else {\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n      default:\n        h = 0;\n    }\n\n    h /= 6;\n  }\n\n  h = Math.round(h*360);\n  s = Math.round(s*100);\n  l = Math.round(l*100);\n\n  return {\n    h: h,\n    s: s,\n    l: l,\n    hsl: `hsl(${h},${s},${l})`\n  };\n}\n","export default function rgbToRgb({r,g,b}) {\n  return {\n    r,\n    g,\n    b,\n    rgb: `rgb(${r},${g},${b})`\n  }\n}\n","import calcLum from \"./calcLum\";\nimport hexToRgb from \"./hexToRgb\";\nimport hslToHsl from \"./hslToHsl\";\nimport hslToRgb from \"./hslToRgb\";\nimport isValidHex from \"./isValidHex\";\nimport isValidHsl from \"./isValidHsl\";\nimport isValidRgb from \"./isValidRgb\";\nimport rgbToHex from \"./rgbToHex\";\nimport rgbToHsl from \"./rgbToHsl\";\nimport rgbToRgb from \"./rgbToRgb\";\n\nexport default function createColor(input) {\n  let source;\n  let rgb;\n  let hsl;\n  let hex;\n\n\n  if (isValidRgb(input)) {\n    source = \"rgb\";\n    rgb = rgbToRgb(input);\n    hsl = rgbToHsl(input);\n    hex = rgbToHex(input);\n  }\n\n  else if (isValidHsl(input)) {\n    source = \"hsl\";\n    hsl = hslToHsl(input);\n    rgb = hslToRgb(input);\n    hex = rgbToHex(rgb);\n  }\n\n  else if (isValidHex(input)) {\n    source = \"hex\";\n    hex = input;\n    rgb = hexToRgb(input);\n    hsl = rgbToHsl(rgb);\n  }\n\n  else {\n    console.error(\"Bad input\",input);\n    throw new Error(`Bad input!`);\n  }\n\n  let color = Object.assign({},\n    rgb,\n    {\n      hex: hex\n    },\n    hsl,\n    {\n      lum: calcLum(rgb)\n    },\n    {\n      src: source\n    }\n  )\n\n  return color;\n}\n","export default function rgbToRgb({h,s,l}) {\n  return {\n    h,\n    s,\n    l,\n    hsl: `hsl(${h},${s}%,${l}%)`\n  }\n}\n","import createColor from \"./createColor\";\n\nexport default function adjust(originalColor,change) {\n  let newColor;\n\n  if (change.hasOwnProperty(\"red\") || change.hasOwnProperty(\"green\") || change.hasOwnProperty(\"blue\")) {\n    let {r,g,b} = originalColor;\n\n    r = Math.max(Math.min((r + (change.red || 0)),255),0); // Force the number to be between 0-255\n    g = Math.max(Math.min((g + (change.green || 0)),255),0); // Force the number to be between 0-255\n    b = Math.max(Math.min((b + (change.blue || 0)),255),0); // Force the number to be between 0-255\n\n    newColor = createColor({r,g,b});\n\n  } else if (change.hasOwnProperty(\"hue\") || change.hasOwnProperty(\"saturation\") || change.hasOwnProperty(\"lightness\")) {\n    let {h,s,l} = originalColor;\n\n    h = h + (change.hue || 0) % 360; // Force the change to be -360-360\n    if (h < 0) h = 360 - h; // Rotate the color wheel by subtracting negative hue from 360\n\n    s = Math.max(Math.min((s + (change.saturation || 0)),100),0); // Force the number to be between 0-100\n    l = Math.max(Math.min((l + (change.lightness || 0)),100),0); // Force the number to be between 0-100\n\n    newColor = createColor({h,s,l});\n  }\n\n  return newColor;\n}\n","import createColor from \"./createColor\";\n\nexport default function redefine(originalColor,update) {\n  let newColor;\n\n  if (update.hasOwnProperty(\"r\") || update.hasOwnProperty(\"g\") || update.hasOwnProperty(\"b\")) {\n    newColor = createColor({\n      r: update.r !== undefined ? parseInt(update.r) : originalColor.r,\n      g: update.g !== undefined ? parseInt(update.g) : originalColor.g,\n      b: update.b !== undefined ? parseInt(update.b) : originalColor.b\n    });\n  } else if (update.hasOwnProperty(\"h\") || update.hasOwnProperty(\"s\") || update.hasOwnProperty(\"l\")) {\n    newColor = createColor({\n      h: update.h !== undefined ? parseInt(update.h) : originalColor.h,\n      s: update.s !== undefined ? parseInt(update.s) : originalColor.s,\n      l: update.l !== undefined ? parseInt(update.l) : originalColor.l\n    });\n  } else {\n    console.error(\"Bad input\",update);\n    throw new Error(`Bad input!`);\n  }\n\n  return newColor;\n}\n","import adjust from \"./adjust\";\nimport calcContrast from \"./calcContrast\";\nimport calcLum from \"./calcLum\";\nimport createColor from \"./createColor\";\nimport darken from \"./darken\";\nimport hexToRgb from \"./hexToRgb\";\nimport hslToRgb from \"./hslToRgb\";\nimport invert from \"./invert\";\nimport isValidHex from \"./isValidHex\";\nimport isValidHsl from \"./isValidHsl\";\nimport isValidRgb from \"./isValidRgb\";\nimport lighten from \"./lighten\";\nimport matchLum from \"./matchLum\";\nimport redefine from \"./redefine\";\nimport rgbToHex from \"./rgbToHex\";\nimport rgbToHsl from \"./rgbToHsl\";\nimport rgbToRgb from \"./rgbToRgb\";\nimport scale from \"./scale\";\nimport step from \"./step\";\n\nconst colorUtils = {\n  adjust,\n  calcContrast,\n  calcLum,\n  createColor,\n  darken,\n  hexToRgb,\n  hslToRgb,\n  invert,\n  isValidHex,\n  isValidHsl,\n  isValidRgb,\n  lighten,\n  matchLum,\n  redefine,\n  rgbToHex,\n  rgbToHsl,\n  rgbToRgb,\n  scale,\n  step\n}\n\nexport default colorUtils;\n","export default function calcContrast(c1,c2) {\n  let c1Lum = 0;\n  let c2Lum = 0;\n  let contrast = 0;\n\n  if (c1.hasOwnProperty(\"lum\")) {\n    c1Lum = c1.lum;\n  } else if (c1 >= 0 || c1 <= 1) {\n    c1Lum = c1;\n  } else {\n    throw new Error(`Invalid input (${c1}).`);\n  }\n\n  if (c2.hasOwnProperty(\"lum\")) {\n    c2Lum = c2.lum;\n  } else if (c2 >= 0 || c2 <= 1) {\n    c2Lum = c2;\n  } else {\n    throw new Error(`Invalid input (${c2}).`);\n  }\n\n  if (c1Lum === c2Lum) {\n    contrast = 1;\n  } else if (c1Lum > c2Lum) {\n    contrast = (c1Lum+0.05)/(c2Lum+0.05);\n  } else {\n    contrast = (c2Lum+0.05)/(c1Lum+0.05);\n  }\n\n  return contrast;\n}\n","import createColor from \"./createColor\";\n\n// This will move the color xx% closer to black (l: 0)\nexport default function darken(originalColor,pct) {\n  if (pct <= 0 || pct > 100) {\n    throw new Error(`Bad input: ${pct}`)\n  }\n\n  let {h,s,l} = originalColor;\n\n  // convert pct to decimal:\n  pct /= 100;\n\n  // flip the percentage (as we're making things darker)\n  pct = 1-pct;\n\n  l *= pct;\n\n  return createColor({h,s,l});\n}\n","import createColor from './createColor';\n\nexport default function invert(originalColor) {\n  return createColor({\n    r: 255-originalColor.r,\n    g: 255-originalColor.g,\n    b: 255-originalColor.b\n  })\n}\n","import createColor from './createColor';\n\n// This will move the color xx% closer to white (l: 100)\nexport default function lighten(originalColor,pct) {\n  if (pct <= 0 || pct > 100) {\n    throw new Error(`Bad input: ${pct}`)\n  }\n\n  let {h,s,l} = originalColor;\n  let distanceToWhite = 100-l;\n\n  // convert pct to decimal:\n  pct /= 100;\n\n  // Determine the increase:\n  let increase = distanceToWhite * pct;\n\n  // Apply increase to lum:\n  l += increase;\n\n  return createColor({h,s,l});\n}\n","import createColor from \"./createColor\";\nimport redefine from \"./redefine\";\nimport adjust from \"./adjust\";\n\nexport default function matchLum(originalColor,targetLum) {\n  targetLum = Math.round(targetLum * 1000) / 1000;\n\n  let newColor = createColor(originalColor);\n\n  if (targetLum === newColor.lum) { // Nothing to do here.\n    return originalColor;\n  }\n\n  else if (targetLum === 0) { // 0 means black.\n    newColor = redefine(newColor,{l: 0});\n  }\n\n  else if (newColor.lum < targetLum) { // original lum is DARKER than targetLum, we'll lighten it.\n    let counter = 0;\n    while (newColor.lum < targetLum && counter < 100) {\n      newColor = adjust(newColor,{lightness: 1})\n    }\n  }\n\n  else if (newColor.lum > targetLum) { // currentLum is BRIGHTER than targetLum, we'll darken it.\n    let counter = 0;\n    while (newColor.lum > targetLum && counter < 100) {\n      newColor = adjust(newColor,{lightness: -1})\n    }\n  }\n\n  return newColor;\n}\n","import createColor from \"./createColor\";\n\nexport default function scale(originalColor,change) {\n  let newColor;\n\n  if (change.hasOwnProperty(\"red\") || change.hasOwnProperty(\"green\") || change.hasOwnProperty(\"blue\")) {\n    let {r,g,b} = originalColor;\n\n    r = Math.max(Math.min((r * (change.red || 1)),255),0); // Force the number to be between 0-255\n    g = Math.max(Math.min((g * (change.green || 1)),255),0); // Force the number to be between 0-255\n    b = Math.max(Math.min((b * (change.blue || 1)),255),0); // Force the number to be between 0-255\n\n    newColor = createColor({r,g,b});\n\n  } else if (change.hasOwnProperty(\"hue\") || change.hasOwnProperty(\"saturation\") || change.hasOwnProperty(\"lightness\")) {\n    let {h,s,l} = originalColor;\n\n    h = h * (change.hue || 1) % 360; // Force the change to be -360-360\n    if (h < 0) h = 360 - h; // Rotate the color wheel by subtracting negative hue from 360\n\n    s = Math.max(Math.min((s * (change.saturation || 1)),100),0); // Force the number to be between 0-100\n    l = Math.max(Math.min((l * (change.lightness || 1)),100),0); // Force the number to be between 0-100\n\n    newColor = createColor({h,s,l});\n  }\n\n  return newColor;\n}\n","import createColor from \"./createColor\";\n\nexport default function step(cFrom,cTo,steps) {\n  let stepsR = [];\n  let stepsG = [];\n  let stepsB = [];\n\n  let rStepLength = Math.round((cTo.r-cFrom.r)/(steps+1));\n  let gStepLength = Math.round((cTo.g-cFrom.g)/(steps+1));\n  let bStepLength = Math.round((cTo.b-cFrom.b)/(steps+1));\n\n  for (let i = 0; i < steps; i++) {\n    stepsR[i] = cFrom.r + rStepLength*(i+1);\n    stepsG[i] = cFrom.g + gStepLength*(i+1);\n    stepsB[i] = cFrom.b + bStepLength*(i+1);\n  }\n\n  let colorSteps = [];\n\n  for (let i = 0; i < steps; i++) {\n    colorSteps[i] = createColor({r: stepsR[i], g: stepsG[i], b: stepsB[i]});\n  }\n\n  return colorSteps;\n}\n"],"names":["calcLum","r","g","b","Math","pow","round","hexToRgb","hex","substring","Error","length","parseInt","rgb","hslToRgb","h","s","l","hue2rgb","p","q","t","isValidHex","isValidHsl","hsl","isValidRgb","rgbToHex","numToHex","num","toString","toUpperCase","rgbToHsl","max","min","d","rgbToRgb","createColor","input","source","console","error","Object","assign","lum","src","adjust","originalColor","change","newColor","hasOwnProperty","red","green","blue","hue","saturation","lightness","redefine","update","undefined","colorUtils","calcContrast","c1","c2","c1Lum","c2Lum","darken","pct","invert","lighten","matchLum","targetLum","scale","step","cFrom","cTo","steps","stepsR","stepsG","stepsB","rStepLength","gStepLength","bStepLength","i","colorSteps"],"mappings":"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"}